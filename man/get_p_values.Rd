% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_size.R
\name{get_p_values}
\alias{get_p_values}
\title{Generate P-Values Matrix from Model Coefficient Simulations}
\usage{
get_p_values(
  model,
  n_sim = 1000,
  responses = NULL,
  generator = NULL,
  test_coefficients = NULL,
  ...
)
}
\arguments{
\item{model}{A model compatible with \code{\link[=get_refit]{get_refit()}}, \code{\link[=get_fixef]{get_fixef()}} and \code{\link[=get_vcov]{get_vcov()}} methods.}

\item{n_sim}{The number of simulations to perform.}

\item{responses}{An optional list with n_sim to be used as response to refit the model.}

\item{generator}{An optional function with one argument to generate new response vectors.}

\item{test_coefficients}{Numeric vector. A vector with values to be used to compute
the test statistic. It should be the coefficients that was used to compute
the fitted values of the response. If \code{NULL} defaults to model fixed effects}

\item{...}{Additional arguments to be passed to \code{\link[=get_refit]{get_refit()}}.}
}
\value{
An object of class \code{LD_pvalues}, which contains the following components:
\describe{
\item{test_coefficients}{Vector of coefficients being tested.}
\item{pvalues_matrix}{Matrix of p-values where each column corresponds to a
simulation and each row corresponds to a coefficient.}
\item{pvalues_joint}{Vector containing the joint p-values obtained from each simulation.}
\item{simulation_fixef}{List of fixed effect coefficient estimates from each simulation.}
\item{simulation_vcov}{List of covariance matrices estimated from each simulation.}
\item{converged}{Logical vector indicating whether model refitting converged for each simulation.}
\item{ginv_used}{Logical vector indicating whether generalized inversed was used to compute the joint p-value.}
\item{responses}{Simulated responses used for refitting the model.}
}
}
\description{
This function generates p-values by simulating coefficients from
a given model and computing Wald test statistics for each simulation.
}
\details{
If \code{responses} is provided it will be used to refit the new model,
otherwise if \code{generator} is provided it will replicate generator by \code{n_sim}.
Otherwise, uses \code{\link[stats:simulate]{stats::simulate()}}.
The length of each new response should be the same as the one obtained from
\link[stats:nobs]{stats::nobs}.

For each new response calls \code{\link[=get_refit]{get_refit()}} to generate a new model with the new
response. It gets the fixed effects and the variance and covariance matrix with
\code{\link[=get_fixef]{get_fixef()}} and \code{\link[=get_vcov]{get_vcov()}}.

The Univariate Wald test is computed from the Wald statistic, and the p-value
is obtained from a chi-squared distribution with one d.f.
The joint Wad test computes the inverse from the vcov result and computes the
Wald statistic using the \code{test_coefficients}. The p-values are also obtained
from a chi-squared distribution with \code{length(test_coefficients)} d.f.

The p-values are supposed to auxiliar the asymptotic approximation.
They are reliable only for tests that depends on them, for example
\link{glm} with "poisson" family.
}
\examples{
# from help("glm")
counts <- c(18, 17, 15, 20, 10, 20, 25, 13, 12)
outcome <- gl(3, 1, 9)
treatment <- gl(3, 3)
model <- glm(counts ~ outcome + treatment, family = poisson())
new_responses <- replicate(100, MASS::rnegbin(fitted.values(model), theta = 4.5), simplify = FALSE)
get_p_values(model, responses = new_responses, n_sim = 100)

## Should yield similar results
generator <- function(object) MASS::rnegbin(fitted.values(object), theta = 4.5)
get_p_values(model, generator = generator, n_sim = 100)
}
\seealso{
\code{\link[=plot.LD_pvalues]{plot.LD_pvalues()}} for plotting.
}
